Your task is to complete the primary method of the Binary Search Tree: the insert and search method.



As discussed in the lecture, you have to take note of three considerations in deleting a node:

If the tree is currently empty, insert the number as the root.
Start by searching from the root. If the said node already contains the number, return false since we don't want duplicate values.
If the element at the root is greater than the number, you are to insert the number at the left subtree of the node, otherwise at the right subtree.
Do this recursively until there is no node in the subtree, to which insert the number there and return true.


Feel free to add your own methods inside bst.

Sample Output 1

Op: i 42
Op: p
Size: 1
+--R: 42
Status: 1
Op: x
Exiting
Sample Output 2

Op: p
Size: 0
EMPTY
Op: i 67
Op: p
Size: 1
+--R: 67
Status: 1
Op: s 67
Is there 67? 1
Op: s 23
Is there 23? 0
Op: x
Exiting
Sample Output 3

Op: i 98
Op: i 54
Op: i 32
Op: i 23
Op: p
Size: 4
+--R: 98
|   +--L: 54
|   |   +--L: 32
|   |   |   +--L: 23
Status: 1
Op: s 23
Is there 23? 1
Op: x
Exiting